**Departamento Académico de Ingeniería**

**C8280 -Comunicación de Datos y Redes**

**AmazonS3- AWS Elastic Block Store (EBS)**

**Indicaciones**

1. Las respuestas deben ser explicadas, solo colocar resultados sin ninguna referencia no puntúa en las preguntas de la evaluación.
1. Realiza una copia de este documento y coloca todas tus respuestas y sube a tu repositorio personal de github en formato markdown. Presenta capturas de pantalla del procedimiento y las explicaciones necesarias. No puntúa si solo se hace la presentación de imágenes.
1. De preferencia adiciona un video adicional explicando los pasos realizados. Utiliza el sandbox de AWS usado en la práctica anterior.
1. Sube a la plataforma de Blackboard el enlace de github donde están todas tus respuestas. No olvides colocar tu nombre y apellido antes de subir el enlace de tus respuestas a la plataforma
1. Cualquier evidencia de copia elimina el examen se informará de la situación a la coordinación.
# **S3**
En este laboratorio, se estudiará el almacenamiento de Amazon S3. Utilizarás los comandos aws s3 y s3api para administrar datos en Amazon S3. Amazon S3 es un almacenamiento de objetos accesible a través de Internet.
## **Parte 1: Operaciones básicas con S3**
Suponga que su directorio actual es /home/aws\_user (puedes cambiarlo). Envíe las siguientes instrucciones y responde las preguntas que siguen.

1. Enumere todos los buckets propiedad del usuario a través del siguiente comando ls. aws s3 ls

¿Cuál es la salida?

La salida es la siguiente

No me aparece nada como resultado porque apenas estamos comenzado a crear por lo tanto no tengo buckets de amazon S3 en mi cuenta y es por esto que no tengo resultados. Para ello en el siguiente paso crearemos un bucket. 

1. Haz un bucket a través del siguiente comando mb.

aws s3 mb s3://tu\_nombre\_de\_usuario ¿Cuál es la salida?

La salida es la siguiente 

Lo que significa que ya se creo un bucket con el nombre victoria-castro.

1. Enumera el contenido del bucket a través del siguiente comando ls.

aws s3 ls s3://tu\_nombre\_de\_usuario ¿Cuál es la salida?

La salida es la siguiente

Por obvias razones no me aparece nada como resultado ya que no tengo objetos almacenados en el bucket ya que recién lo hemos creado.

Lo que hace este comando es mostrarte la lista de objetos que tienes dentro de tu bucket.  

1. Crea un directorio llamado páginas web (mkdir webpages) y cd en ese directorio. Crea un archivo html simple llamado hello.html con el siguiente contenido.

<html><body>

<h1>Amazon S3</h1> Hello World!

</body></html>

Carga el archivo en tu bucket s3 y póngalo a disposición del público con lo siguiente. aws s3 cp hello.html s3://tu\_nombre\_de\_usuario --acl public-read

¿Cuál es la salida?

Primero ingresamos los siguientes comandos 

Mkdir webpages es para crear el directorio webpages 

Cd es para ingresar al directorio de webpages

Ingresamos el código que nos proporcionaron llamado hello.html

De ahí colocamos el siguiente comando para subirlo a mi bucket s3

Ahora tenemos que hacer publico nuestro URL ya que nos aparece lo siguiente 

Lo que significa que no se encuentra publico 

Entonces ingresamos a AWS y buscamos amazon s3

Apretamos nuestro bucket que es victoria-castro 

Y seleccionamos permisos 


Nos dirigimos a Block Public Access y tenemos que desactivarlo 

Le damos save changes (guardar cambios)

Ahora nos vamos a la parte de 

Aquí nosotros podemos cambiar a que cualquiera pueda entrar a nuestra URL sin embargo no nos deja por lo tanto nos vamos a 

En el que colocando el siguiente código que lo que haremos es crear una política que nos permite el acceso publico al archivo. 

Ahora abrimos nuestro URL y nos sale lo siguiente 



1. Dado que se puede acceder a tu objeto s3 a través de Internet, probémoslo. En el navegador	web	de	tu	máquina	virtual	(u	otra9	accede	a	la	URL http://s3.amazonaws.com/tu\_nombre\_de\_usuario/hello.html.	¿Qué	viste	en	el navegador?

Me sale lo siguiente lo que significa que mi URL si esta para el público
## **Parte 2: alojamiento de sitios web estáticos con S3**
6\.	Podemos usar el bucket como almacenamiento de sitios web estáticos. Experimentamos con eso aquí. Crea dos archivos html en el directorio actual llamados index.html y error.html. El contenido de los dos archivos se muestra a continuación.

<html><body>

This is an index page! </body></html>

<html><body>

Sorry, we can't find that page! </body></html>

Creamos los 2 archivos entonces lo colocamos en la terminal 

El comando sync compara el directorio de origen con tu bucket S3 y carga solo archivos nuevos o modificados. Entonces puedes cargar ambos archivos fácilmente a través del siguiente comando.

aws s3 sync ./ s3://tu\_nombre\_de\_usuario/ --acl public-read

¿Cuál es la salida? 


Lo que significa que se cargaron correctamente los siguientes archivos.












Ahora habilitamos el bucket para alojamiento de sitios web estáticos con las siguiente instrucciones.

aws s3 website s3://tu\_nombre\_de\_usuario/

--index-document index.html

--error-document error.html

Observa cómo la instrucción enlaza ambos archivos con sus usos. En el navegador web de tu VM, acceda a la URL

http://tu\_nombre\_de\_usuario.s3-website-us-east-1.amazonaws.com/ ¿Qué viste en el navegador? ¿Por qué? 

Me aparece esto porque esta mostrando lo que está dentro de “index.html” como la página principal de mi sitio web. Además, que el url es la raíz de mi sitio web 




Ahora, acceda a

http://tu\_nombre\_de\_usuario.s3-website-us-east-1.amazonaws.com/hello.html

¿Qué viste en el navegador?


Me sale esto porque esta mostrando el archivo de hello.html de mi bucket s3.




` `A continuación, acceda a

http://tu\_nombre\_de\_usuario.s3-website-us-east-1.amazonaws.com/2.html. ¿Qué

viste en el navegador? ¿Por qué?

Me sale esto porque el archivo 2.html no se encuentra en mi directorio por lo tanto no puede mostrar nada y me aparece el siguiente mensaje. 

7. Podemos definir reglas de redirección y agregar metadatos a los objetos en el bucket. Ejecuta el siguiente comando para hacerlo. Observa que este comando usa s3api, no s3.

aws s3api put-object --bucket *tu\_nombre\_de\_usuario*

--key hello.html

--website-redirect-location http://www.nku.edu/~haow1 --acl public-read

--metadata redirection\_creator=aws\_user

Ahora http://*tu\_nombre\_de\_usuario*.s3-website-us-east-1.amazonaws.com/hello.html ¿Qué ves en el navegador? ¿Por qué?.

Me salió esto porque con los anteriores comandos redireccionamos el objeto “hello.html” de nuestro bucket a una nueva url. 

7. Para recuperar los metadatos de un objeto, usamos el subcomando head-object. Emite la siguiente instrucción. aws s3api head-object --bucket tu\_nombre\_de\_usuario --key hello.html ¿Cuál es la salida?

Aparece esto porque son los metadatos del objeto “hello.html” en mi bucket s3 esto incluye detalles como el tamaño de contenido, la última modificación, el tipo de contenido y la ubicación de redirección del sitio web. 

## **Parte 3: Limpieza**
9. Podemos eliminar objetos usando rm. Elimina tu página de índice de la siguiente manera.

aws s3 rm s3://tu\_nombre\_de\_usuario/index.html

¿Cuál es la salida?

La salida nos dice que se eliminó index.html

9. Y podemos quitar el bucket como un todo. Usa lo siguiente.

aws s3 rb s3://tu\_nombre\_de\_usuario --force ¿Cuál es la salida? ¿Qué hace --force?

Muestra que los siguientes elementos se eliminaron además de mi bucket llamado victoria-castro

Lo que hacer force es como su mismo nombre lo dice forzar la eliminación de un bucket de S3 y todos sus objetos, incluso si el bucket no está vacío.
## EBS
En este laboratorio, se utilizará la CLI de AWS para crear un volumen y una instantánea de Amazon EBS y configurar tu almacenamiento de EBS como un arreglo RAID.
### **Parte 1. Crea un nuevo volumen de EBS**
1. Inicia sesión en el sandbox del curso. Crea un nuevo volumen de EBS con el siguiente comando.

aws ec2 create-volume --size 1 --region us-east-1

--availability-zone us-east-1c

¿Qué significa este comando? ¿Cuál es la salida? Lo 

Lo que nos dio como resultado es que se creó exitosamente y lo que nos dio como resultado es la información sobre el volumen EBS.

El primero es el comando para crear un volumen en Amazon EC2. De ahí se especifica el tamaño del volumen en gigabytes lo que sería 1GB, “--region us-east-1:” Indica la región de AWS en la que se creará el volumen. Y “--availability-zone us-east-1c:” Especifica la zona de disponibilidad en la que se creará el volumen.

1. Utiliza el siguiente comando para ver la información de tu volumen de EBS donde se te proporcionó volume\_id en el resultado del comando anterior.

aws ec2 describe-volume-status --volume-ids volume\_id ¿Cuál es la salida?

Antes tenemos que crear un grupo de claves y una clase SSH 

Para ello hacemos lo siguiente 

Esto significa la creación de grupo de seguridad

Ahora creamos la clave privada

1. Para crear una instancia de EBS, hazlo siguiente.

aws ec2 run-instances --image-id ami-d9a98cb0 --count 1

–instance-type t1.micro –key-name tu\_nombre\_de\_usuario-key --security-groups tu\_nombre\_de\_usuario

--placement AvailabilityZone=us-east-1c

Ahora, adjunta el volumen de EBS a la instancia. Esto lo colocas en el directorio /dev/sdf en tu instancia EC2.

aws ec2 attach-volume --volume-id volume\_id --instance-id id\_instance --device /dev/sdf ¿Cuál es la salida?

Esto nos indica que se ha iniciado el adjuntar el volumen EBS al dispositivo. Además, debes esperar unos minutos porque como se puede observar se encuentra “attaching”

Que significa que se esta iniciando y tiene que esperar hasta que finalice antes que comencemos a hacer otras cosas en EC2.


1. Inicia sesión en la instancia EC2 a través de ssh. En tu instancia EC2, cambie a root.

Ahora queremos crear un sistema de archivos en el volumen de EBS (el volumen de

EBS es básicamente un dispositivo de almacenamiento en blanco). Luego

necesitamos montar el volumen para que sea accesible. Utiliza los siguientes comandos desde tu EC2. Ten en cuenta que, según el controlador del dispositivo de bloque del kernel, el dispositivo puede estar conectado con un nombre diferente al que ha especificado. Por ejemplo, si especificas un nombre de dispositivo de /dev/sdf, el kernel podría cambiar el nombre de tu dispositivo a /dev/xvdf, en la mayoría de los casos, la letra final sigue siendo la misma. Ejecuta lsblk en tu terminal para ver tus dispositivos de disco disponibles y tus puntos de montaje (si corresponde) para ayudarte a determinar el nombre de dispositivo correcto que debe usar. Suponga que el kernel cambia el nombre del dispositivo a /dev/xvdf.

mkfs -F /dev/xvdf

¿Cuál es la salida?






mkdir /data

mount /dev/xvdf /data cd /data/ df

¿Cuál es la salida?
### **Parte 2. Instantáneas de EBS**
5\.	Crea un archivo llamado aws\_user.txt y escribe lo que desees en el archivo. Ahora, veremos cómo crear una copia de seguridad de todo tu volumen de EBS. El primer paso es asegurarte de que todos los datos en memoria se hayan escrito en el volumen (disco), ya que es posible que el archivo creado aún no se haya guardado en el disco. Para forzar que esto suceda, usamos el comando sync (sincronización). En la ventana de tu terminal para su instancia EC2, ejecuta las siguientes instrucciones.

root@ip-10-45-185-154:/data# sync

Abre una segunda ventana de terminal en tu máquina virtual. Emite el siguiente comando.

aws ec2 create-snapshot --volume-id volume\_id

--description "Esta es mi instantánea de volumen".

donde volume\_id es el id obtenido del paso 1. ¿Cuál es el resultado? Puedes verificar el estado de tu instantánea usando las siguientes instrucciones. aws ec2 describe-snapshots --snapshot-id snapshot\_id

El snapshot\_id debe ser parte de la salida de la instrucción de creación de instantáneas que acaba de ejecutar. ¿Cuál es el resultado del comando describe-snapshot? Continúa repitiendo este comando hasta que vea que el estado de la instantánea cambia a "completado", lo que significa que se ha realizado una copia de seguridad del volumen.

6. Dada una instantánea, podemos usarla para crear un nuevo volumen. Ejecuta el siguiente comando. Utiliza el ID de instantánea del paso 5.

aws ec2 create-volume --región us-east-1 --availability-zone us-east-1c

--snapshot-id snapshot\_id

¿Cuál es la salida? Comprueba el estado del volumen. ¿Qué comando ejecutaste para verificar el estado? ¿Cuál es la salida?

6. Repite el comando de adjuntar volumen del paso 3 para adjuntar este nuevo volumen. El ID de volumen será el que se devolvió al obtener el estado 6, mientras que el ID de instancia es el de tu instancia EC2 que obtuvo en el paso 3.

aws ec2 attach-volumen --volume-id volume\_id

--instance-id instance\_id --device /dev/sdg ¿Cuál es la salida?

6. Vuelve a la ventana de la terminal en la que se tiene ssh en tu instancia EC2. Desde ese terminal, crea un punto de montaje llamado /data2 y monte el nuevo volumen allí. ¿Qué comandos se ejecutó para lograr ambas tareas? Cambia el directorio de su instancia EC2 a /data2. ¿Viste el archivo aws\_user.txt?
6. Ahora queremos desmontar nuestros volúmenes, para lo cual usamos el comando umount. Luego separaremos los volúmenes de la instancia EC2 y los destruiremos. Los siguientes son los comandos a ejecutar. Ten en cuenta que los primeros tres comandos están en su instancia EC2 y el resto está en tu VM.

root@ip-10-45-185-154:/data3# cd / root@ip-10-45-185-154:/# unmount /dev/xvdf root@ip-10-45-185-154:/# unmount /dev/xvdg

Ahora desconecta y elimina el primer volumen, cuyo volume\_id obtuvo en el paso 1. Espera unos 10 segundos después de desconectar antes de intentar eliminar.

aws ec2 detach-volume --volume-id volume\_id aws ec2 delete-volume --volume-id volume\_id

¿Cuáles son las salidas? Repite estos dos comandos para el segundo volumen, cuyo volume\_id deberías haber obtenido del paso 6. ¿Qué comandos usastes? ¿Cuáles son las salidas?

6. Elimina la instantánea con lo siguiente usando su snapshot\_id del paso 5. aws ec2 delete-snapshot --snapshot-id *snapshot\_id.}*
6. Cambie a la terminal. De lo que aprendiste en la parte 1, crea dos volúmenes de 1 GB en la zona de disponibilidad us-east-1c. ¿Qué comandos ejecutaste? ¿Cuáles son las salidas? Adjunta ambos volúmenes a tu instancia EC2, haciendo que aparezcan como /dev/sdh1 y /dev/sdh2, respectivamente. ¿Qué comandos ejecutaste? ¿Cuáles son las salidas?
6. Cambia al terminal de la instancia EC2. Usaremos el programa mdadm de Linux para configurar los volúmenes en una configuración RAID. Instala mdadm de la siguiente manera. apt-get update

apt-get install mdadm

Escribe "y" y presiona enter cuando se te solicite, seleccione "No configuration" cuando se te solicite y presiona enter. Ahora ejecutamos mdadm para crear un arreglo RAID 0 en los dos volúmenes. Ejecuta lo siguiente. Donde vea "renamed\_/dev/sdh1" y "renamed\_/dev/shd2", usa los nombres que se te proporcionó AWS en el paso 11.

mdadm --create /dev/md0 --level 0 --metadata=1.1

--raid-devices 2 renamed\_/dev/sdh1 renamed\_/dev/sdh2 ¿Cuál es la salida?

6. Ahora, podemos comprobar el estado de la matriz RAID 0. Emite lo siguiente. mdadm --detail /dev/md0

¿Cuál es la salida? Tenemos que agregar un sistema de archivos al arreglo RAID 0. Entonces queremos montarlo. Haz lo siguiente.

mkfs /dev/md0 mkdir /data3 mount /dev/md0 /data3

El comando df de Linux muestra información sobre los sistemas de archivos montados. ¿Cuál es la salida?

6. Finalizamos este laboratorio deteniendo el arreglo RAID 0, separando y eliminando ambos volúmenes de EBS y luego finalizando la instancia EC2. Para detener el arreglo RAID 0, haz lo siguiente desde su instancia EC2.

cd / unmount /dev/md0 mdadm --stop /dev/md0

Ahora, cambia a tu terminal. Separa y elimina ambos volúmenes de EBS. ¿Qué comandos ejecutaste? ¿Cuáles son las salidas? Finaliza tu instancia EC2. ¿Qué comando ejecutaste? ¿Cuál es la salida?
Comunicación de Datos y Redes
